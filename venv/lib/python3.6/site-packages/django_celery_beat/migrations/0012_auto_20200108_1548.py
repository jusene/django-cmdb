# Generated by Django 2.2.7 on 2020-01-08 07:48

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_celery_beat.validators
import timezone_field.fields


class Migration(migrations.Migration):

    dependencies = [
        ('django_celery_beat', '0011_auto_20190508_0153'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='crontabschedule',
            options={'ordering': ['month_of_year', 'day_of_month', 'day_of_week', 'hour', 'minute', 'timezone'], 'verbose_name': '计划时间', 'verbose_name_plural': '计划时间'},
        ),
        migrations.AlterModelOptions(
            name='intervalschedule',
            options={'ordering': ['period', 'every'], 'verbose_name': '间隔时间', 'verbose_name_plural': '间隔时间'},
        ),
        migrations.AlterModelOptions(
            name='periodictask',
            options={'verbose_name': '分配任务', 'verbose_name_plural': '分配任务'},
        ),
        migrations.AlterField(
            model_name='crontabschedule',
            name='day_of_month',
            field=models.CharField(default='*', help_text='Cron Days Of The Month to Run. Use "*" for "all". (Example: "1,15")', max_length=124, validators=[django_celery_beat.validators.day_of_month_validator], verbose_name='月(m)'),
        ),
        migrations.AlterField(
            model_name='crontabschedule',
            name='day_of_week',
            field=models.CharField(default='*', help_text='Cron Days Of The Week to Run. Use "*" for "all". (Example: "0,5")', max_length=64, validators=[django_celery_beat.validators.day_of_week_validator], verbose_name='日(d)'),
        ),
        migrations.AlterField(
            model_name='crontabschedule',
            name='hour',
            field=models.CharField(default='*', help_text='Cron Hours to Run. Use "*" for "all". (Example: "8,20")', max_length=96, validators=[django_celery_beat.validators.hour_validator], verbose_name='时(h)'),
        ),
        migrations.AlterField(
            model_name='crontabschedule',
            name='minute',
            field=models.CharField(default='*', help_text='Cron Minutes to Run. Use "*" for "all". (Example: "0,30")', max_length=240, validators=[django_celery_beat.validators.minute_validator], verbose_name='分(m)'),
        ),
        migrations.AlterField(
            model_name='crontabschedule',
            name='month_of_year',
            field=models.CharField(default='*', help_text='Cron Months Of The Year to Run. Use "*" for "all". (Example: "0,6")', max_length=64, validators=[django_celery_beat.validators.month_of_year_validator], verbose_name='周(w)'),
        ),
        migrations.AlterField(
            model_name='crontabschedule',
            name='timezone',
            field=timezone_field.fields.TimeZoneField(default='UTC', help_text='Timezone to Run the Cron Schedule on.  Default is UTC.', verbose_name='时区'),
        ),
        migrations.AlterField(
            model_name='intervalschedule',
            name='every',
            field=models.IntegerField(help_text='Number of interval periods to wait before running the task again', validators=[django.core.validators.MinValueValidator(1)], verbose_name='间隔数'),
        ),
        migrations.AlterField(
            model_name='intervalschedule',
            name='period',
            field=models.CharField(choices=[('days', 'Days'), ('hours', 'Hours'), ('minutes', 'Minutes'), ('seconds', 'Seconds'), ('microseconds', 'Microseconds')], help_text='The type of period between task runs (Example: days)', max_length=24, verbose_name='间隔单位'),
        ),
        migrations.AlterField(
            model_name='periodictask',
            name='args',
            field=models.TextField(blank=True, default='[]', help_text='JSON encoded positional arguments (Example: ["arg1", "arg2"])', verbose_name='位置参数'),
        ),
        migrations.AlterField(
            model_name='periodictask',
            name='clocked',
            field=models.ForeignKey(blank=True, help_text='Clocked Schedule to run the task on.  Set only one schedule type, leave the others null.', null=True, on_delete=django.db.models.deletion.CASCADE, to='django_celery_beat.ClockedSchedule', verbose_name='Clocked调度'),
        ),
        migrations.AlterField(
            model_name='periodictask',
            name='crontab',
            field=models.ForeignKey(blank=True, help_text='Crontab Schedule to run the task on.  Set only one schedule type, leave the others null.', null=True, on_delete=django.db.models.deletion.CASCADE, to='django_celery_beat.CrontabSchedule', verbose_name='计划调度'),
        ),
        migrations.AlterField(
            model_name='periodictask',
            name='date_changed',
            field=models.DateTimeField(auto_now=True, help_text='Datetime that this PeriodicTask was last modified', verbose_name='最近修改时间'),
        ),
        migrations.AlterField(
            model_name='periodictask',
            name='description',
            field=models.TextField(blank=True, help_text='Detailed description about the details of this Periodic Task', verbose_name='描述'),
        ),
        migrations.AlterField(
            model_name='periodictask',
            name='enabled',
            field=models.BooleanField(default=True, help_text='Set to False to disable the schedule', verbose_name='可用'),
        ),
        migrations.AlterField(
            model_name='periodictask',
            name='exchange',
            field=models.CharField(blank=True, default=None, help_text='Override Exchange for low-level AMQP routing', max_length=200, null=True, verbose_name='交换机'),
        ),
        migrations.AlterField(
            model_name='periodictask',
            name='expires',
            field=models.DateTimeField(blank=True, help_text='Datetime after which the schedule will no longer trigger the task to run', null=True, verbose_name='过期时间'),
        ),
        migrations.AlterField(
            model_name='periodictask',
            name='headers',
            field=models.TextField(blank=True, default='{}', help_text='JSON encoded message headers for the AMQP message.', verbose_name='AMQP信息头部'),
        ),
        migrations.AlterField(
            model_name='periodictask',
            name='interval',
            field=models.ForeignKey(blank=True, help_text='Interval Schedule to run the task on.  Set only one schedule type, leave the others null.', null=True, on_delete=django.db.models.deletion.CASCADE, to='django_celery_beat.IntervalSchedule', verbose_name='间隔调度'),
        ),
        migrations.AlterField(
            model_name='periodictask',
            name='kwargs',
            field=models.TextField(blank=True, default='{}', help_text='JSON encoded keyword arguments (Example: {"argument": "value"})', verbose_name='命名参数'),
        ),
        migrations.AlterField(
            model_name='periodictask',
            name='last_run_at',
            field=models.DateTimeField(blank=True, editable=False, help_text='Datetime that the schedule last triggered the task to run. Reset to None if enabled is set to False.', null=True, verbose_name='最近执行的时间'),
        ),
        migrations.AlterField(
            model_name='periodictask',
            name='name',
            field=models.CharField(help_text='Short Description For This Task', max_length=200, unique=True, verbose_name='任务名'),
        ),
        migrations.AlterField(
            model_name='periodictask',
            name='one_off',
            field=models.BooleanField(default=False, help_text='If True, the schedule will only run the task a single time', verbose_name='一次性任务'),
        ),
        migrations.AlterField(
            model_name='periodictask',
            name='priority',
            field=models.PositiveIntegerField(blank=True, default=None, help_text='Priority Number between 0 and 255. Supported by: RabbitMQ, Redis (priority reversed, 0 is highest).', null=True, validators=[django.core.validators.MaxValueValidator(255)], verbose_name='优先级'),
        ),
        migrations.AlterField(
            model_name='periodictask',
            name='queue',
            field=models.CharField(blank=True, default=None, help_text='Queue defined in CELERY_TASK_QUEUES. Leave None for default queuing.', max_length=200, null=True, verbose_name='队列'),
        ),
        migrations.AlterField(
            model_name='periodictask',
            name='routing_key',
            field=models.CharField(blank=True, default=None, help_text='Override Routing Key for low-level AMQP routing', max_length=200, null=True, verbose_name='路由键'),
        ),
        migrations.AlterField(
            model_name='periodictask',
            name='solar',
            field=models.ForeignKey(blank=True, help_text='Solar Schedule to run the task on.  Set only one schedule type, leave the others null.', null=True, on_delete=django.db.models.deletion.CASCADE, to='django_celery_beat.SolarSchedule', verbose_name='Solar调度'),
        ),
        migrations.AlterField(
            model_name='periodictask',
            name='start_time',
            field=models.DateTimeField(blank=True, help_text='Datetime when the schedule should begin triggering the task to run', null=True, verbose_name='时间'),
        ),
        migrations.AlterField(
            model_name='periodictask',
            name='task',
            field=models.CharField(help_text='The Name of the Celery Task that Should be Run.  (Example: "proj.tasks.import_contacts")', max_length=200, verbose_name='Task'),
        ),
        migrations.AlterField(
            model_name='periodictask',
            name='total_run_count',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Running count of how many times the schedule has triggered the task', verbose_name='共运行的次数'),
        ),
    ]
